parameters:
  DotNetVersion: '9.0.201'
  UnoCheck_Version: '1.28.0-dev.29'
  installWorkloads: true
  UnoCheckParameters: ''

steps:
  # Required until .NET 6 installs properly using UseDotnet
  # using preview builds
  #- bash: |
  #    export PATH="${{ parameters.Dotnet_Root }}:${{ parameters.Dotnet_Tools }}:$PATH"
  #    curl -L https://raw.githubusercontent.com/dotnet/install-scripts/11b4eebe23d871c074364940d301c3eb53e7c7ec/src/dotnet-install.sh > dotnet-install.sh
  #    sh dotnet-install.sh --version ${{ parameters.DotNetVersion }} --install-dir $DOTNET_ROOT --verbose
  #    dotnet --list-sdks
  #    echo "##vso[task.setvariable variable=PATH]$PATH"
  #  displayName: install .NET ${{ parameters.DotNetVersion }}
  #  retryCountOnTaskFailure: 3
  #  condition: eq(variables['Agent.OS'], 'Darwin')

  - task: UseDotNet@2
    displayName: 'Use .NET Core SDK ${{ parameters.DotNetVersion }}'
    retryCountOnTaskFailure: 3
    inputs:
      packageType: sdk
      version: ${{ parameters.DotNetVersion }}
      includePreviewVersions: true

  - template: jdk-setup.yml

  - bash: |
      dotnet tool update --global uno.check --version ${{ parameters.UnoCheck_Version }} --add-source https://api.nuget.org/v3/index.json
      uno-check --ci --non-interactive --fix --skip gtk3 --skip xcode --skip vswin --skip androidemulator --skip vsmac --pre-major ${{ parameters.UnoCheckParameters }}
    displayName: Install .NET Workloads
    condition: and(succeeded(), and( eq(variables['Agent.OS'], 'Darwin'), eq('${{ parameters.installWorkloads }}', 'true') ))
